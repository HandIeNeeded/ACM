diff --git a/AsZ/2015.08.21/I.cc b/AsZ/2015.08.21/I.cc
index 6064d6d..83e41c6 100644
--- a/AsZ/2015.08.21/I.cc
+++ b/AsZ/2015.08.21/I.cc
@@ -7,7 +7,6 @@
 using namespace std;
 
 int pow_mod(int a, int b, int mod) {
-    assert(b >= 0);
     int ans = 1;
     while (b) {
         if (b & 1) ans = 1LL * ans * a % mod;
@@ -95,6 +94,25 @@ int get(int x, int p, int g, int id) {
     return -1;
 }
 
+int getPhi(int x) {
+    int ans = 1;
+    REP(i, tot) {
+        if (p[i] * p[i] > x) break;
+        if (x % p[i] == 0) {
+            ans *= p[i] - 1;
+            x /= p[i];
+            while (x % p[i] == 0) {
+                ans *= p[i];
+                x /= p[i];
+            }
+        }
+    }
+    if (x > 1) {
+        ans *= (x - 1);
+    }
+    return ans;
+}
+
 int solve(int x, int y, int p, int g, int id) {
     if (y == 1) return 0;
     if (p == 2) {
@@ -105,9 +123,11 @@ int solve(int x, int y, int p, int g, int id) {
     int d = __gcd(a, phi);
     if (b % d) return -1;
     a /= d, b /= d, phi /= d;
-    LL xx, yy, zz;
-    exgcd(a, phi, zz, xx, yy);
-    return xx * b % phi;
+    int tmp = getPhi(phi);
+    return 1LL * pow_mod(a, tmp - 1, phi) * b % phi;
+    //LL xx, yy, zz;
+    //exgcd(a, phi, zz, xx, yy);
+    //return xx * b % phi;
 }
 
 int main() {
@@ -134,15 +154,6 @@ int main() {
             g.push_back(solver.primitive_root(sum));
         }
         init(m, fac, g);
-        //cout << fac.size() << ' ' << g.size() << endl;
-        //for (auto &x: fac) {
-        //    cout << x << ' ';
-        //}
-        //cout << endl;
-        //for (auto &x: g) {
-        //    cout << x << ' ';
-        //}
-        //cout << endl;
         printf("Case #%d:\n", ca++);
         while (m--) {
             int ans = INT_MAX;
